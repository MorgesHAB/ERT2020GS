digraph "RHRouter"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{RHRouter\n|# _lastE2ESequenceNumber\l# _max_hops\l|+ RHRouter()\l+ init()\l+ setMaxHops()\l+ addRouteTo()\l+ getRouteTo()\l+ deleteRouteTo()\l+ retireOldestRoute()\l+ clearRoutingTable()\l+ printRoutingTable()\l+ sendtoWait()\l+ sendtoFromSourceWait()\l+ recvfromAck()\l+ recvfromAckTimeout()\l# peekAtMessage()\l# route()\l# deleteRoute()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="RHReliableDatagram subclass for sending addressed, optionally acknowledged datagrams multi-hop routed..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{RHReliableDatagram\n||+ RHReliableDatagram()\l+ setTimeout()\l+ setRetries()\l+ retries()\l+ sendtoWait()\l+ recvfromAck()\l+ recvfromAckTimeout()\l+ retransmissions()\l+ resetRetransmissions()\l# acknowledge()\l# haveNewMessage()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_r_h_reliable_datagram.html",tooltip="RHDatagram subclass for sending addressed, acknowledged, retransmitted datagrams."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{RHDatagram\n|# _thisAddress\l|+ RHDatagram()\l+ init()\l+ setThisAddress()\l+ sendto()\l+ recvfrom()\l+ available()\l+ waitAvailable()\l+ waitPacketSent()\l+ waitPacketSent()\l+ waitAvailableTimeout()\land 9 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_r_h_datagram.html",tooltip="Manager class for addressed, unreliable messages."];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_driver" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{RHGenericDriver\n|# _mode\l# _thisAddress\l# _promiscuous\l# _rxHeaderTo\l# _rxHeaderFrom\l# _rxHeaderId\l# _rxHeaderFlags\l# _txHeaderTo\l# _txHeaderFrom\l# _txHeaderId\l# _txHeaderFlags\l# _lastRssi\l# _rxBad\l# _rxGood\l# _txGood\l|+ RHGenericDriver()\l+ init()\l+ available()\l+ recv()\l+ send()\l+ maxMessageLength()\l+ waitAvailable()\l+ waitPacketSent()\l+ waitPacketSent()\l+ waitAvailableTimeout()\land 17 more...\l+ printBuffer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_r_h_generic_driver.html",tooltip="Abstract base class for a RadioHead driver."];
}
