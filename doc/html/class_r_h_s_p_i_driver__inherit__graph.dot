digraph "RHSPIDriver"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{RHSPIDriver\n|# _spi\l# _slaveSelectPin\l|+ RHSPIDriver()\l+ init()\l+ spiRead()\l+ spiWrite()\l+ spiBurstRead()\l+ spiBurstWrite()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class for a RadioHead drivers that use the SPI bus to communicate with its transport hardware."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{RHGenericDriver\n|# _mode\l# _thisAddress\l# _promiscuous\l# _rxHeaderTo\l# _rxHeaderFrom\l# _rxHeaderId\l# _rxHeaderFlags\l# _txHeaderTo\l# _txHeaderFrom\l# _txHeaderId\l# _txHeaderFlags\l# _lastRssi\l# _rxBad\l# _rxGood\l# _txGood\l|+ RHGenericDriver()\l+ init()\l+ available()\l+ recv()\l+ send()\l+ maxMessageLength()\l+ waitAvailable()\l+ waitPacketSent()\l+ waitPacketSent()\l+ waitAvailableTimeout()\land 17 more...\l+ printBuffer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_r_h_generic_driver.html",tooltip="Abstract base class for a RadioHead driver."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{RH_RF24\n||+ RH_RF24()\l+ init()\l+ setIdleMode()\l+ setFrequency()\l+ setModemRegisters()\l+ setModemConfig()\l+ available()\l+ recv()\l+ send()\l+ maxMessageLength()\land 16 more...\l# handleInterrupt()\l# clearRxFifo()\l# clearBuffer()\l# sendNextFragment()\l# readNextFragment()\l# writeTxFifo()\l# validateRxBuf()\l# power_on_reset()\l# configure()\l# cmd_clear_all_interrupts()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_r_h___r_f24.html",tooltip="Driver to send and receive unaddressed, unreliable datagrams via an RF24 and compatible radio transce..."];
}
